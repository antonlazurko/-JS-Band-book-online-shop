{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/Cart/Cart.module.css","views/Cart/Cart.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Cart","dispatch","useDispatch","cartInfo","useSelector","cartSelectors","getCartInfo","cartModal","getCartModal","token","selectors","getTokenSelector","useState","modalCartInfo","setModalCartInfo","useEffect","className","styles","cart","type","style","width","disabled","onClick","cartOperations","purchaseOperation","books","map","book","bookId","empty","src","alt","border","title","count","price","reduce","acc"],"mappings":"0LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,sB,6HC4ErCC,UAlEF,WACX,IAAMC,EAAWC,cACXC,EAAWC,YAAYC,IAAcC,aACrCC,EAAYH,YAAYC,IAAcG,cACtCC,EAAQL,YAAYM,IAAUC,kBAJnB,EAKyBC,mBAAS,IALlC,mBAKVC,EALU,KAKKC,EALL,KASjB,OAHAC,qBAAU,WACRD,EAAiBX,KAChB,IAED,sBAAKa,UAAWC,IAAOC,KAAvB,UACGX,GAAa,cAAC,IAAD,CAAWJ,SAAUU,IACnC,wBACEM,KAAK,SACLH,UAAU,4BACVI,MAAO,CAAEC,MAAO,SAChBC,SAA8B,IAApBnB,EAAST,OACnB6B,QAAS,kBACPtB,EACEuB,IAAeC,kBAAkB,CAC/BC,MAAOvB,EAASwB,KAAI,SAACC,GAAD,OAAUA,EAAKC,UACnCpB,YATR,sBAgBqB,IAApBN,EAAST,OACR,qBAAKsB,UAAWC,IAAOa,MAAvB,SACE,8BACE,qBAAKC,IAAKb,IAAMc,IAAI,SADtB,kBAMF,gCACE,wBAAOC,OAAO,MAAMjB,UAAU,QAA9B,UACE,gCACE,+BACE,sCACA,uCACA,uCACA,4CAGJ,gCACGb,EAASwB,KAAI,SAACC,GAAD,OACZ,+BACE,6BAAKA,EAAKM,QACV,6BAAKN,EAAKO,QACV,6BAAKP,EAAKQ,QACV,6BAAKR,EAAKQ,MAAQR,EAAKO,UAJhBP,EAAKC,gBASpB,+CAEG1B,EAASkC,QAAO,SAACC,EAAKV,GAAN,OAAeU,EAAMV,EAAKO,MAAQP,EAAKQ,QAAO,GAFjE","file":"static/js/4.56b1150e.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__19ltl\",\"empty\":\"Cart_empty__Sb_Kc\"};","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable import/no-unresolved */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { cartSelectors, cartOperations } from 'redux/cart';\nimport { CartModal } from 'components';\nimport { selectors } from 'redux/books';\nimport cart from 'images/cart.png';\nimport styles from './Cart.module.css';\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const cartInfo = useSelector(cartSelectors.getCartInfo);\n  const cartModal = useSelector(cartSelectors.getCartModal);\n  const token = useSelector(selectors.getTokenSelector);\n  const [modalCartInfo, setModalCartInfo] = useState([]);\n  useEffect(() => {\n    setModalCartInfo(cartInfo);\n  }, []);\n  return (\n    <div className={styles.cart}>\n      {cartModal && <CartModal cartInfo={modalCartInfo} />}\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-secondary\"\n        style={{ width: '100px' }}\n        disabled={cartInfo.length === 0}\n        onClick={() =>\n          dispatch(\n            cartOperations.purchaseOperation({\n              books: cartInfo.map((book) => book.bookId),\n              token,\n            }),\n          )\n        }\n      >\n        Purchase\n      </button>\n      {cartInfo.length === 0 ? (\n        <div className={styles.empty}>\n          <p>\n            <img src={cart} alt=\"cart\" />\n            Cart empty\n          </p>\n        </div>\n      ) : (\n        <div>\n          <table border=\"1px\" className=\"table\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Count</th>\n                <th>Price</th>\n                <th>Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {cartInfo.map((book) => (\n                <tr key={book.bookId}>\n                  <td>{book.title}</td>\n                  <td>{book.count}</td>\n                  <td>{book.price}</td>\n                  <td>{book.price * book.count}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <div>\n            Total price:\n            {cartInfo.reduce((acc, book) => acc + book.count * book.price, 0)}$\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Cart;\n"],"sourceRoot":""}